import os
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

class SimpleFilmBot:
    def __init__(self):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        self.token = os.getenv('TELEGRAM_BOT_TOKEN')
        if not self.token:
            raise ValueError("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        self.application = Application.builder().token(self.token).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        self.setup_handlers()
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
        self.application.add_handler(CommandHandler("start", self.start_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
        self.application.add_handler(CommandHandler("help", self.help_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start"""
        user = update.effective_user
        welcome_text = f"""
–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üé¨

–Ø - —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–æ–¥–±–æ—Ä—É —Ñ–∏–ª—å–º–æ–≤ –≤ Okko. 
–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é, –ø–æ–≥–æ–¥–µ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º.

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏:
- –ö–∞–∫–æ–µ —É —Ç–µ–±—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?
- –ö–∞–∫–æ–π –∂–∞–Ω—Ä —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?
- –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏, –∫–∞–∫–æ–π —Ñ–∏–ª—å–º –∏—â–µ—à—å!

–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º! –ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–≥–æ–¥–Ω—è? üòä
        """
        await update.message.reply_text(welcome_text)
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help"""
        help_text = """
–Ø —É–º–µ—é:
üéØ –ü–æ–¥–±–∏—Ä–∞—Ç—å —Ñ–∏–ª—å–º—ã –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é
üå§Ô∏è –£—á–∏—Ç—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –∑–∞ –æ–∫–Ω–æ–º  
üé≠ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –ø–æ –ª—é–±–∏–º—ã–º –∂–∞–Ω—Ä–∞–º
üí¨ –û–±—â–∞—Ç—å—Å—è –∏ —É—Ç–æ—á–Ω—è—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –æ —Å–≤–æ–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏ –∏–ª–∏ –∫–∞–∫–∏–µ —Ñ–∏–ª—å–º—ã —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è!
        """
        await update.message.reply_text(help_text)
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        user_message = update.message.text
        user = update.effective_user
        
        # –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        response = self.generate_simple_response(user_message, user.first_name)
        
        await update.message.reply_text(response)
    
    def generate_simple_response(self, message: str, user_name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤"""
        message_lower = message.lower()
        
        # –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤
        if any(word in message_lower for word in ['–ø—Ä–∏–≤–µ—Ç', 'hello', 'hi', '–∑–¥–∞—Ä–æ–≤']):
            return f"–ü—Ä–∏–≤–µ—Ç, {user_name}! –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! –ö–∞–∫–æ–π —Ñ–∏–ª—å–º —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–µ–≥–æ–¥–Ω—è? üé•"
        
        elif any(word in message_lower for word in ['–∫–æ–º–µ–¥–∏—è', '—Å–º–µ—Ö', '–≤–µ—Å–µ–ª—ã', '—é–º–æ—Ä']):
            return "–û—Ç–ª–∏—á–Ω–æ! –ö–æ–º–µ–¥–∏–∏ - —ç—Ç–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø–æ–¥–Ω—è—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è! üé≠\n–ü–æ–ø—Ä–æ–±—É–π –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å '–ò–≤–∞–Ω –í–∞—Å–∏–ª—å–µ–≤–∏—á –º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏—é' –∏–ª–∏ '–û–¥–Ω–∏ –∏–∑ –Ω–∞—Å'"
        
        elif any(word in message_lower for word in ['–≥—Ä—É—Å—Ç–Ω', '–ø–µ—á–∞–ª', '—Ç–æ—Å–∫', '–¥–æ–∂–¥']):
            return "–ü–æ–Ω–∏–º–∞—é... –ò–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–æ–≥—Ä—É—Å—Ç–∏—Ç—å. –ú–æ–∂–µ—Ç –±—ã—Ç—å, –¥—Ä–∞–º–∞ –∏–ª–∏ –º–µ–ª–æ–¥—Ä–∞–º–∞? üåßÔ∏è\n–ö–∞–∫ –Ω–∞—Å—á—ë—Ç '–î–æ–≤–æ–¥–∞' –∏–ª–∏ '–ù–∞—á–∞–ª–∞'?"
        
        elif any(word in message_lower for word in ['—É—Å—Ç–∞–ª', '—É—Ç–æ–º–∏–ª', '—É–ø–∞–¥–æ–∫ —Å–∏–ª']):
            return "–ü–æ—Ö–æ–∂–µ, —Ç–µ–±–µ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–µ! üöÄ\n–†–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ –∫–∏–Ω–æ –∏–ª–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–π —Ñ–∏–ª—å–º!"
        
        elif any(word in message_lower for word in ['—ç–∫—à–Ω', '–±–æ–µ–≤–∏–∫', 'action', '—Å—Ç—Ä–µ–ª—å–±–∞']):
            return "–≠–∫—à–Ω - –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! üí•\n–î–ª—è —Ç–µ–±—è –µ—Å—Ç—å –ø–æ–¥–±–æ—Ä–∫–∞ –ª—É—á—à–∏—Ö –±–æ–µ–≤–∏–∫–æ–≤ —ç—Ç–æ–≥–æ –≥–æ–¥–∞!"
        
        elif any(word in message_lower for word in ['—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞', '–Ω–∞—É—á–Ω—ã–π', '–∫–æ—Å–º–æ—Å', '–±—É–¥—É—â']):
            return "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –º–∏—Ä—ã! ü™ê\n–£ –Ω–∞—Å –µ—Å—Ç—å –æ—Ç–ª–∏—á–Ω—ã–µ –Ω–∞—É—á–Ω–æ-—Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã!"
        
        else:
            return f"–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, {user_name}! –†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ:\n- –ö–∞–∫–æ–µ —É —Ç–µ–±—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?\n- –ö–∞–∫–æ–π –∂–∞–Ω—Ä –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å?\n- –ï—Å—Ç—å –ª—é–±–∏–º—ã–µ —Ñ–∏–ª—å–º—ã –∏–ª–∏ –∞–∫—Ç—ë—Ä—ã?\n\n–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å–º –¥–ª—è —Ç–µ–±—è! üòä"

    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        self.application.run_polling()

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == '__main__':
    bot = SimpleFilmBot()
    bot.run()